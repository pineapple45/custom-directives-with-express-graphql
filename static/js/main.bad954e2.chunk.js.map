{"version":3,"sources":["routes/AuthorizedRoute.tsx","components/Card/Card.tsx","components/Message/Message.tsx","context/AuthProvider.tsx","assets/icon.svg","components/NavBar/Navbar.tsx","components/Footer/Footer.tsx","components/Layout/Layout.tsx","hooks/useMessage.tsx","graphql/queries.ts","pages/utils.ts","graphql/mutations.ts","hooks/mutations/useCreateLike.tsx","hooks/mutations/useDeleteLike.tsx","pages/Album/Album.tsx","pages/404/404.tsx","lib/apollo-client.tsx","hooks/mutations/useLoginUser.tsx","pages/Login/Login.tsx","hooks/mutations/useCreateUser.tsx","pages/Register/Register.tsx","hooks/mutations/useCreateComment.tsx","pages/Post/Post.tsx","components/Modal/Modal.tsx","hooks/mutations/useCreatePost.tsx","hooks/mutations/useDeletePost.tsx","pages/Admin/index.tsx","hooks/mutations/useDeleteUser.tsx","hooks/mutations/useAssignRole.tsx","pages/Admin/Users/Users.tsx","hooks/mutations/useDeleteComment.tsx","pages/Admin/Post/Post.tsx","pages/Moderator/index.tsx","pages/Moderator/Post/Post.tsx","App.tsx","index.tsx"],"names":["Role","useStyles","makeStyles","theme","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","Card","cardHeading","cardBody","media","children","classes","className","CardMedia","image","title","alt","CardContent","Typography","gutterBottom","variant","component","Alert","props","elevation","root","width","marginTop","spacing","Message","message","setMessage","handleClose","event","reason","toShow","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","messageText","initialAuthState","userId","undefined","token","tokenExpiration","username","role","AuthContext","React","createContext","AuthProvider","useState","authState","setAuthState","useEffect","userDataFromStorage","localStorage","getItem","JSON","parse","Provider","value","logout","clear","isLoggedIn","useAuth","useContext","AuthorizedRoute","Component","rest","render","console","log","to","pathname","state","from","location","createStyles","menuButton","marginRight","Navbar","history","useHistory","anchorEl","setAnchorEl","Boolean","AppBar","position","color","Toolbar","src","Icon","onClick","push","Box","justifyContent","alignItems","IconButton","currentTarget","AccountCircle","Menu","id","keepMounted","transformOrigin","ADMIN","MenuItem","MODERATOR","Button","style","minHeight","main","marginBottom","footer","padding","backgroundColor","palette","type","grey","Footer","Container","maxWidth","align","Link","href","Date","getFullYear","Layout","useMessage","loginUserQuery","gql","listPostsQuery","getPostByIdQuery","listUsersQuery","commonStyles","icon","heroContent","background","paper","heroButtons","cardGrid","paddingBottom","createUserMutation","createPostMutation","deletePostMutation","assignRoleMutation","createLikeMutation","deleteLikeMutation","createCommentMutation","deleteCommentMutation","deleteUserMutation","useCreateLike","useMutation","createLike","data","loading","error","createLikeMutationHandler","vars","options","a","variables","refetchQueries","query","_id","postId","isLoading","useDeleteLike","deleteLike","deleteLikeMutationHandler","Album","useQuery","fetchPolicy","errorPolicy","loadingPosts","errorOnListingPosts","postsData","addLikeHandler","creatorId","response","removeLikeHandler","likeId","CircularProgress","errorMessage","networkError","ifLoggedInUsersLikeExists","post","likeList","find","like","creator","CssBaseline","paragraph","Grid","container","listPosts","map","item","xs","sm","md","description","CardActions","Favorite","FavoriteBorderOutlined","length","InsertComment","commentList","Error404","apolloClient","isBrowser","process","browser","create","initialState","BACKEND_URI","httpLink","createHttpLink","uri","headers","Authorization","errorLink","onError","graphQLErrors","alert","window","ApolloClient","connectToDevTools","ssrMode","link","concat","cache","InMemoryCache","restore","initApollo","client","useLoginUser","loginUserQueryHandler","avatar","margin","secondary","form","submit","Login","usernameOrEmail","password","inputState","setInputState","loginUserInProgress","setLoginUserInProgress","inputChangeHandler","target","name","loginFormHandler","preventDefault","login","setItem","stringify","Avatar","noValidate","onSubmit","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","useCreateUser","createUser","createUserMutationHandler","Register","registerUserInProgress","email","registerFormHandler","useCreateComment","createComment","createCommentMutationHandler","Post","useParams","loadingPostById","postById","commentAdditionInProgress","comment","setComment","postCommentHandler","text","getPostById","placeholder","InputLabelProps","shrink","e","Paper","ListItemText","primary","minWidth","border","borderRadius","boxShadow","shadows","Modal","useCreatePost","createPost","createPostMutationHandler","useDeletePost","deletePost","deletePostMutationHandler","Admin","isModalOpen","setIsModalOpen","createPostHandler","deletePostHandler","multiline","rows","Delete","useDeleteUser","deleteUser","deleteUserMutationHandler","useAssignRole","assignRole","assignRoleMutationHandler","Users","usersList","loadingUsersList","selectedUser","setSelectedUser","assignRoleToUserHandler","assignedBy","assignedUser","deleteUserHandler","listUsers","user","ListItem","SupervisedUserCircle","FormControl","InputLabel","htmlFor","Select","native","AUTH_USER","useDeleteComment","deleteComment","deleteCommentMutationHandler","postByIdData","deleteCommentHandler","commentId","Moderator","errorOnLoadingPostById","config","App","ApolloProvider","basename","PostForModerator","path","exact","PostForAdmin","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bad954e2.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useAuth } from '../context/AuthProvider';\n\nexport enum Role {\n  ADMIN = 'ADMIN',\n  MODERATOR = 'MODERATOR',\n  AUTH_USER = 'AUTH_USER',\n}\n\ninterface AuthorizedRoutesType extends RouteProps {\n  component: any;\n  role: Role;\n}\n\nconst AuthorizedRoute: React.FC<AuthorizedRoutesType> = ({\n  component: Component,\n  role,\n  ...rest\n}) => {\n  const { authState, isLoggedIn } = useAuth();\n\n  let userDataFromStorage: any;\n  if (!isLoggedIn()) {\n    userDataFromStorage = JSON.parse(localStorage.getItem('userData')!);\n  } else {\n    // condition if user refreshes the page, then we get data straight from local storage since\n    // authstate returens undefined or isLoggedIn() will be false as page renders before even the\n    // check is made\n    userDataFromStorage = authState;\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!userDataFromStorage) {\n          // not logged in so redirect to login page with the return url\n          console.log('route not authenticated');\n\n          return (\n            <Redirect\n              to={{ pathname: '/login', state: { from: props.location } }}\n            />\n          );\n        }\n\n        if (userDataFromStorage.role === role) {\n          console.log('route is authorised');\n          return <Component {...props} />;\n        }\n\n        console.log('route not authorised');\n        return <Redirect to={{ pathname: '/' }} />;\n      }}\n    />\n  );\n};\n\nexport default AuthorizedRoute;\n","import React from 'react';\nimport {\n  Card as MuiCard,\n  CardMedia,\n  CardContent,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\n\ninterface CardType {\n  media?: {\n    image: string;\n    alt: string;\n  };\n  cardHeading: string;\n  cardBody?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Card: React.FC<CardType> = ({\n  cardHeading,\n  cardBody,\n  media,\n  children,\n}) => {\n  const classes = useStyles();\n  return (\n    <MuiCard className={classes.card}>\n      {media && (\n        <CardMedia\n          className={classes.cardMedia}\n          image={media?.image}\n          title={media?.alt}\n        />\n      )}\n      <CardContent className={classes.cardContent}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {cardHeading}\n        </Typography>\n        <Typography>{cardBody}</Typography>\n      </CardContent>\n      {children}\n    </MuiCard>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\ninterface SnackbarType {\n  message: {\n    messageText: string | null;\n    variant: 'success' | 'error' | 'warning';\n    toShow: boolean;\n  };\n  setMessage: (message: {\n    messageText: string | null;\n    variant: 'success' | 'error' | 'warning';\n    toShow: boolean;\n  }) => void;\n}\n\nconst Alert = (props: AlertProps) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst Message: React.FC<SnackbarType> = ({ message, setMessage }) => {\n  const classes = useStyles();\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setMessage({\n      ...message,\n      toShow: false,\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        open={message.toShow}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <Alert onClose={handleClose} severity={message.variant}>\n          {message.messageText}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default Message;\n","import React, { useContext, useState, ReactNode, useEffect } from 'react';\n\nconst initialAuthState = {\n  userId: undefined,\n  token: undefined,\n  tokenExpiration: undefined,\n  username: undefined,\n  role: undefined,\n};\n\ntype InitialStateProps = typeof initialAuthState;\n\nconst AuthContext: any =\n  React.createContext<InitialStateProps>(initialAuthState);\n\nconst AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [authState, setAuthState] = useState(initialAuthState);\n\n  const logout = () => {\n    localStorage.clear();\n    setAuthState(initialAuthState);\n  };\n\n  const isLoggedIn = () => {\n    if (authState.userId !== undefined) return authState;\n    return false;\n  };\n\n  useEffect(() => {\n    const userDataFromStorage =\n      localStorage.getItem('userData') !== 'undefined' &&\n      JSON.parse(localStorage.getItem('userData')!);\n    if (userDataFromStorage && authState.userId === undefined) {\n      setAuthState({\n        ...authState,\n        ...userDataFromStorage,\n      });\n    }\n  }, [authState, setAuthState]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        authState,\n        setAuthState,\n        logout,\n        isLoggedIn,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n\nexport const useAuth = () => useContext<typeof AuthContext>(AuthContext);\n","export default __webpack_public_path__ + \"static/media/icon.5fd26610.svg\";","import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Menu,\n  IconButton,\n  MenuItem,\n  makeStyles,\n  createStyles,\n  Theme,\n  Box,\n} from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthProvider';\nimport { Role } from '../../routes/AuthorizedRoute';\nimport Icon from '../../assets/icon.svg';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nconst Navbar = () => {\n  const { isLoggedIn, logout, authState } = useAuth();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    logout();\n    setAnchorEl(null);\n  };\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\">\n      <Toolbar>\n        <img src={Icon} alt=\"site-icon\" width=\"50px\" />\n        <Typography\n          variant=\"h6\"\n          className={classes.title}\n          onClick={() => history.push('/')}\n        >\n          Photos\n        </Typography>\n        {isLoggedIn() !== false ? (\n          <div>\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              {authState && <span>{authState.username}</span>}\n\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            </Box>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              {authState && authState.role === Role.ADMIN && (\n                <MenuItem onClick={() => history.push(`/admin`)}>\n                  Admin Console\n                </MenuItem>\n              )}\n              {authState && authState.role === Role.MODERATOR && (\n                <MenuItem onClick={() => history.push(`/moderator`)}>\n                  Moderator Console\n                </MenuItem>\n              )}\n              <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n          </div>\n        ) : (\n          <div>\n            <Button\n              color=\"inherit\"\n              variant=\"outlined\"\n              style={{ marginRight: '10px' }}\n              onClick={() => history.push('/register')}\n            >\n              register\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => history.push('/login')}\n            >\n              login\n            </Button>\n          </div>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n              Photos\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n          </Typography>\n        </Container>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Navbar from '../NavBar';\nimport Footer from '../Footer';\n\nconst Layout: React.FC<any> = ({ children }) => {\n  return (\n    <div>\n      <Navbar />\n      <br />\n      {children}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import { useState } from 'react';\n\nexport interface MessageProps {\n  messageText: string | null;\n  variant: 'success' | 'error' | 'warning';\n  toShow: boolean;\n}\n\nexport const useMessage = ({\n  messageText,\n  variant,\n  toShow,\n}: MessageProps): [\n  message: MessageProps,\n  setMessage: ({ messageText, variant, toShow }: MessageProps) => void\n] => {\n  const [message, setMessage] = useState<MessageProps>({\n    toShow,\n    variant,\n    messageText,\n  });\n\n  return [message, setMessage];\n};\n","import { gql } from '@apollo/client';\n\nexport const loginUserQuery = gql`\n  query Login($usernameOrEmail: String!, $password: String!) {\n    login(usernameOrEmail: $usernameOrEmail, password: $password) {\n      userId\n      token\n      tokenExpiration\n      username\n      role\n    }\n  }\n`;\n\nexport const listPostsQuery = gql`\n  query {\n    listPosts {\n      _id\n      image\n      title\n      description\n      creator {\n        _id\n        username\n      }\n      commentList {\n        _id\n        post {\n          _id\n        }\n        creator {\n          _id\n        }\n      }\n      likeList {\n        _id\n        post {\n          _id\n        }\n        creator {\n          _id\n        }\n      }\n    }\n  }\n`;\n\nexport const getPostByIdQuery = gql`\n  query GetPostById($_id: ID!) {\n    getPostById(_id: $_id) {\n      _id\n      image\n      title\n      description\n      creator {\n        username\n      }\n      commentList {\n        _id\n        text\n        creator {\n          username\n        }\n      }\n    }\n  }\n`;\n\nexport const listUsersQuery = gql`\n  query {\n    listUsers {\n      _id\n      username\n      email\n      role\n    }\n  }\n`;\n\nexport const getUserByIdQuery = gql`\n  query GetUserById($_id: ID!) {\n    getUserById(_id: _id) {\n      _id\n      username\n      email\n      role\n      postList {\n        _id\n        title\n      }\n      commentList {\n        _id\n        text\n      }\n    }\n  }\n`;\n","import { makeStyles } from '@material-ui/core';\nimport { MessageProps } from '../hooks/useMessage';\n\nexport const checkIfUserIsNotAuthenticated = (\n  isLoggedIn: () => boolean,\n  setMessage: ({ messageText, variant, toShow }: MessageProps) => void\n) => {\n  if (!isLoggedIn()) {\n    setMessage({\n      toShow: true,\n      variant: 'error',\n      messageText: 'Unauthenticated access',\n    });\n    return true;\n  }\n\n  return false;\n};\n\nexport const commonStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n","import { gql } from '@apollo/client';\n\n// create User mutation\nexport const createUserMutation = gql`\n  mutation CreateUser($username: String!, $email: String!, $password: String!) {\n    createUser(\n      user: { username: $username, email: $email, password: $password }\n    ) {\n      _id\n      username\n      email\n      role\n    }\n  }\n`;\n\n// create post mutation\nexport const createPostMutation = gql`\n  mutation CreatePost(\n    $image: String\n    $title: String!\n    $description: String\n    $creatorId: ID!\n  ) {\n    createPost(\n      post: {\n        image: $image\n        title: $title\n        description: $description\n        creatorId: $creatorId\n      }\n    ) {\n      _id\n      image\n      title\n      description\n      creator {\n        _id\n        username\n        email\n        role\n      }\n    }\n  }\n`;\n\n// create post mutation\nexport const deletePostMutation = gql`\n  mutation DeletePost($_id: ID!) {\n    deletePost(_id: $_id)\n  }\n`;\n\n// create post mutation\nexport const assignRoleMutation = gql`\n  mutation AssignRole($role: String!, $assignedBy: ID!, $assignedUser: ID!) {\n    assignRole(\n      role: $role\n      assignedBy: $assignedBy\n      assignedUser: $assignedUser\n    ) {\n      _id\n      username\n      email\n      role\n    }\n  }\n`;\n\n// create like mutation\nexport const createLikeMutation = gql`\n  mutation CreateLike($postId: ID!, $creatorId: ID!) {\n    createLike(like: { postId: $postId, creatorId: $creatorId }) {\n      _id\n      post {\n        _id\n      }\n      creator {\n        _id\n      }\n    }\n  }\n`;\n\n// delete like mutation\nexport const deleteLikeMutation = gql`\n  mutation DeleteLike($_id: ID!) {\n    deleteLike(_id: $_id)\n  }\n`;\n\n// create Comment mutation\nexport const createCommentMutation = gql`\n  mutation CreateComment($text: String!, $postId: ID!, $creatorId: ID!) {\n    createComment(\n      comment: { text: $text, postId: $postId, creatorId: $creatorId }\n    ) {\n      _id\n      text\n      post {\n        _id\n      }\n      creator {\n        _id\n      }\n    }\n  }\n`;\n\n// delete Comment mutation\nexport const deleteCommentMutation = gql`\n  mutation DeleteComment($_id: ID!) {\n    deleteComment(_id: $_id)\n  }\n`;\n\n// delete User mutation\nexport const deleteUserMutation = gql`\n  mutation DeletUser($_id: ID!) {\n    deleteUser(_id: $_id)\n  }\n`;\n","import { createLikeMutation } from '../../graphql/mutations';\nimport { getPostByIdQuery } from '../../graphql/queries';\nimport { useMutation } from '@apollo/client';\nimport { useAuth } from '../../context/AuthProvider';\n\nconst useCreateLike = () => {\n  const { isLoggedIn } = useAuth();\n\n  const [createLike, { data, loading, error }] =\n    useMutation(createLikeMutation);\n\n  const handleCreateLike = async (vars: any, options?: any) => {\n    if (!isLoggedIn()) {\n      return {\n        error: true,\n        data: { message: 'Please Login to interact with posts' },\n      };\n    }\n\n    try {\n      const { data } = await createLike({\n        variables: { ...vars },\n        refetchQueries: [\n          { query: getPostByIdQuery, variables: { _id: options.postId } },\n        ],\n      });\n\n      return { error: false, data: data };\n    } catch (error: any) {\n      return { error: true, data: error };\n    }\n  };\n\n  return {\n    createLikeMutationHandler: handleCreateLike,\n    data,\n    isLoading: loading,\n    error,\n  };\n};\n\nexport default useCreateLike;\n","import { deleteLikeMutation } from '../../graphql/mutations';\nimport { getPostByIdQuery } from '../../graphql/queries';\nimport { useMutation } from '@apollo/client';\nimport { useAuth } from '../../context/AuthProvider';\n\nconst useDeleteLike = () => {\n  const { isLoggedIn } = useAuth();\n\n  const [deleteLike, { data, loading, error }] =\n    useMutation(deleteLikeMutation);\n\n  const handleDeleteLike = async (vars: any, options?: any) => {\n    if (!isLoggedIn()) {\n      return {\n        error: true,\n        data: { message: 'Please Login to interact with posts' },\n      };\n    }\n\n    try {\n      const { data } = await deleteLike({\n        variables: { ...vars },\n        refetchQueries: [\n          { query: getPostByIdQuery, variables: { _id: options.postId } },\n        ],\n      });\n\n      return { error: false, data: data };\n    } catch (error: any) {\n      return { error: true, data: error };\n    }\n  };\n\n  return {\n    deleteLikeMutationHandler: handleDeleteLike,\n    data,\n    isLoading: loading,\n    error,\n  };\n};\n\nexport default useDeleteLike;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport {\n  CssBaseline,\n  Grid,\n  Typography,\n  Container,\n  CircularProgress,\n  Box,\n  CardActions,\n} from '@material-ui/core';\n\nimport {\n  FavoriteBorderOutlined,\n  Favorite,\n  InsertComment,\n} from '@material-ui/icons';\n\nimport Card from '../../components/Card';\nimport Message from '../../components/Message';\nimport Layout from '../../components/Layout';\nimport Icon from '../../assets/icon.svg';\nimport { useMessage } from '../../hooks/useMessage';\n\nimport { listPostsQuery } from '../../graphql/queries';\nimport { useAuth } from '../../context/AuthProvider';\nimport { commonStyles } from '../utils';\n\nimport useCreateLike from '../../hooks/mutations/useCreateLike';\nimport useDeleteLike from '../../hooks/mutations/useDeleteLike';\n\nconst useStyles = commonStyles;\n\nconst Album: React.FC = () => {\n  const { createLikeMutationHandler } = useCreateLike();\n  const { deleteLikeMutationHandler } = useDeleteLike();\n  const {\n    loading: loadingPosts,\n    error: errorOnListingPosts,\n    data: postsData,\n  } = useQuery(listPostsQuery, {\n    fetchPolicy: 'network-only',\n    errorPolicy: 'all',\n  });\n\n  const { authState } = useAuth();\n\n  const [message, setMessage] = useMessage({\n    toShow: false,\n    messageText: '',\n    variant: 'success',\n  });\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const addLikeHandler = async (postId: string) => {\n    const response = await createLikeMutationHandler(\n      { postId: postId, creatorId: authState.userId },\n      { postId }\n    );\n\n    setMessage({\n      messageText: response.error && response.data.message,\n      toShow: response.error && true,\n      variant: 'error',\n    });\n  };\n\n  const removeLikeHandler = async (likeId: string, postId: string) => {\n    const response = await deleteLikeMutationHandler(\n      { _id: likeId },\n      { postId }\n    );\n\n    setMessage({\n      messageText: response.error && response.data.message,\n      toShow: response.error && true,\n      variant: 'error',\n    });\n  };\n\n  const addCommentHandler = (postId: string) => {\n    history.push(`/post/${postId}`);\n  };\n\n  if (loadingPosts) return <CircularProgress />;\n\n  let errorMessage = undefined;\n\n  if (!errorOnListingPosts?.networkError) {\n    errorMessage = errorOnListingPosts?.message;\n  }\n\n  const ifLoggedInUsersLikeExists = (post: any) => {\n    const like =\n      post.likeList &&\n      post.likeList.find((like: any) => {\n        if (\n          authState.userId &&\n          like.post._id === post._id &&\n          like.creator._id === authState.userId\n        ) {\n          return like;\n        } else {\n          return null;\n        }\n      });\n\n    return like;\n  };\n\n  return (\n    <Layout>\n      <CssBaseline />\n      {errorMessage && (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          {errorMessage}\n        </Box>\n      )}\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography\n              component=\"h1\"\n              variant=\"h2\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n            >\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <img src={Icon} alt=\"site-icon\" width=\"100px\" />\n                <span>Photos</span>\n              </Box>\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" paragraph>\n              Hello👋! Photos is sample test project that I worked upon to show\n              how custom-directives can be implemented with{' '}\n              <a href=\"https://www.npmjs.com/package/express-graphql\">\n                express-graphql\n              </a>{' '}\n              and{' '}\n              <a href=\"https://www.npmjs.com/package/graphql-directive\">\n                graphql-directive\n              </a>\n            </Typography>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {postsData !== undefined ? (\n              postsData.listPosts.map((post: any) => {\n                const media = {\n                  image: post.image,\n                  alt: post.image,\n                };\n\n                return (\n                  <Grid item key={post._id} xs={12} sm={6} md={4}>\n                    <Card\n                      media={media}\n                      cardHeading={post.title}\n                      cardBody={post.description}\n                    >\n                      <CardActions>\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          flexDirection=\"column\"\n                        >\n                          {ifLoggedInUsersLikeExists(post) ? (\n                            <Favorite\n                              key={ifLoggedInUsersLikeExists(post)._id}\n                              color=\"secondary\"\n                              onClick={() =>\n                                removeLikeHandler(\n                                  ifLoggedInUsersLikeExists(post)._id,\n                                  post._id\n                                )\n                              }\n                            />\n                          ) : (\n                            <FavoriteBorderOutlined\n                              // key={ifLoggedInUsersLikeExists(post)._id}\n                              color=\"secondary\"\n                              onClick={() => addLikeHandler(post._id)}\n                            />\n                          )}\n                          {post.likeList ? (\n                            post.likeList.length !== 0 && (\n                              <span>{post.likeList.length}</span>\n                            )\n                          ) : (\n                            <span>could not fetch likes count</span>\n                          )}\n                        </Box>\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          flexDirection=\"column\"\n                        >\n                          <InsertComment\n                            onClick={() => addCommentHandler(post._id)}\n                          />\n                          {post.commentList ? (\n                            post.commentList.length !== 0 && (\n                              <span>{post.commentList.length}</span>\n                            )\n                          ) : (\n                            <span>could not fetch comments count</span>\n                          )}\n                        </Box>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                );\n              })\n            ) : (\n              <div>Could not fetch posts</div>\n            )}\n          </Grid>\n        </Container>\n      </main>\n      <Message message={message} setMessage={setMessage} />\n    </Layout>\n  );\n};\n\nexport default Album;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst Error404: React.FC = () => {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      404\n      <br />\n      Page Not Found :(\n      <br />\n      <Link to=\"/\">Go to home</Link>\n    </Box>\n  );\n};\n\nexport default Error404;\n","import {\n  ApolloClient,\n  InMemoryCache,\n  NormalizedCacheObject,\n  createHttpLink,\n} from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\n\nlet apolloClient: ApolloClient<NormalizedCacheObject> | null = null;\nconst isBrowser: boolean = (process.env as any).browser;\n\nfunction create(initialState: any) {\n  let token =\n    localStorage.getItem('userData') !== 'undefined' &&\n    JSON.parse(localStorage.getItem('userData')!) &&\n    JSON.parse(localStorage.getItem('userData')!).token;\n\n  const BACKEND_URI =\n    process.env.NODE_ENV === 'production'\n      ? 'https://photos-custom-directives.herokuapp.com/graphql'\n      : process.env.REACT_APP_PUBLIC_BACKEND_URI_DEV;\n\n  console.log('backend_uri', BACKEND_URI);\n\n  const httpLink = createHttpLink({\n    uri: BACKEND_URI,\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: token ? `Bearer ${token}` : '',\n    },\n  });\n\n  const errorLink = onError(({ graphQLErrors, networkError }) => {\n    // if (graphQLErrors) {\n    //   for (const { message, locations, path } of graphQLErrors) {\n    //     console.log(\n    //       `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n    //     );\n    //     alert(message);\n    //   }\n    // }\n\n    if (networkError) {\n      if (isBrowser && networkError.message === 'failed to fetch') {\n        alert('Please check your internet connection or retry agan!');\n      } else if (\n        typeof window !== undefined &&\n        networkError.message ===\n          'Response not successful: Received status code 400'\n      ) {\n        alert('Server received bad request. Please check your client queries');\n      }\n      console.log(`[Network error]: ${networkError}`);\n    }\n  });\n\n  // Check out https://github.com/zeit/next.js/pull/4611 if you want to use the AWSAppSyncClient\n  return new ApolloClient({\n    connectToDevTools: isBrowser,\n    ssrMode: !isBrowser, // Disables forceFetch on the server (so queries are only run once)\n    link: errorLink.concat(httpLink),\n    cache: new InMemoryCache().restore(initialState || {}),\n  });\n}\n\nexport default function initApollo(initialState: any) {\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (!isBrowser) {\n    return create(initialState);\n  }\n\n  // Reuse client on the client-side\n  if (!apolloClient) {\n    apolloClient = create(initialState);\n  }\n\n  return apolloClient;\n}\n","import { loginUserQuery } from '../../graphql/queries';\nimport ApolloClient from '../../lib/apollo-client';\nconst client = ApolloClient({});\n\nconst useLoginUser = () => {\n  const handleUserLogin = async (vars: any, options?: any) => {\n    try {\n      const { data } = await client.query({\n        query: loginUserQuery,\n        variables: vars,\n      });\n\n      return { error: false, data: data };\n    } catch (error: any) {\n      return { error: true, data: error };\n    }\n  };\n\n  return {\n    loginUserQueryHandler: handleUserLogin,\n  };\n};\n\nexport default useLoginUser;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  makeStyles,\n  Typography,\n  Grid,\n  TextField,\n  CssBaseline,\n  Button,\n  Avatar,\n  CircularProgress,\n} from '@material-ui/core';\nimport Message from '../../components/Message';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthProvider';\nimport useLoginUser from '../../hooks/mutations/useLoginUser';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { authState, setAuthState, isLoggedIn } = useAuth();\n\n  const { loginUserQueryHandler } = useLoginUser();\n\n  const [message, setMessage] = useState<{\n    toShow: boolean;\n    variant: 'success' | 'error' | 'warning';\n    messageText: string | null;\n  }>({\n    toShow: false,\n    variant: 'success',\n    messageText: '',\n  });\n\n  const [inputState, setInputState] = useState({\n    usernameOrEmail: '',\n    password: '',\n  });\n\n  const [loginUserInProgress, setLoginUserInProgress] = useState(false);\n\n  const inputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputState({\n      ...inputState,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const loginFormHandler = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setLoginUserInProgress(true);\n    const response = await loginUserQueryHandler({ ...inputState });\n\n    setMessage({\n      messageText: response.error ? response.data.message : 'login succesful',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n\n    setLoginUserInProgress(false);\n    if (response.error) {\n      return;\n    }\n\n    setAuthState({\n      ...authState,\n      ...response.data.login,\n    });\n\n    localStorage.setItem('userData', JSON.stringify(response.data.login));\n\n    setInputState({\n      usernameOrEmail: '',\n      password: '',\n    });\n  };\n\n  useEffect(() => {\n    if (isLoggedIn()) history.push('/');\n  }, [history, isLoggedIn]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={loginFormHandler}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Enter Username or Email\"\n            name=\"usernameOrEmail\"\n            autoComplete=\"off\"\n            autoFocus\n            onChange={inputChangeHandler}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={inputChangeHandler}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          {loginUserInProgress && <CircularProgress />}\n\n          <Grid container>\n            {/* <Grid item xs>\n              <Link to=\"/forgot-password\">Forgot password?</Link>\n            </Grid> */}\n            <Grid item>\n              <Link to=\"/register\">{\"Don't have an account? Sign Up\"}</Link>\n            </Grid>\n          </Grid>\n        </form>\n        <br />\n      </div>\n      <Message message={message} setMessage={setMessage} />\n    </Container>\n  );\n};\n\nexport default Login;\n","import { createUserMutation } from '../../graphql/mutations';\nimport { useMutation } from '@apollo/client';\n\nconst useCreateUser = () => {\n  const [createUser, { data, loading, error }] =\n    useMutation(createUserMutation);\n\n  const handleCreateUser = async (vars: any, options?: any) => {\n    try {\n      const { data } = await createUser({ variables: { ...vars } });\n      return { error: false, data: data };\n    } catch (error: any) {\n      return { error: true, data: error };\n    }\n  };\n\n  return {\n    createUserMutationHandler: handleCreateUser,\n    isLoading: loading,\n    data,\n    error,\n  };\n};\n\nexport default useCreateUser;\n","import React, { useState, useEffect } from 'react';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport {\n  Container,\n  Typography,\n  Grid,\n  TextField,\n  Button,\n  Avatar,\n  CssBaseline,\n  CircularProgress,\n  makeStyles,\n} from '@material-ui/core';\n\nimport { Link, useHistory } from 'react-router-dom';\nimport Message from '../../components/Message';\nimport { useAuth } from '../../context/AuthProvider';\nimport useCreateUser from '../../hooks/mutations/useCreateUser';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Register = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const { isLoggedIn } = useAuth();\n\n  const { createUserMutationHandler, isLoading: registerUserInProgress } =\n    useCreateUser();\n\n  const [message, setMessage] = useState<{\n    toShow: boolean;\n    variant: 'success' | 'error' | 'warning';\n    messageText: string | null;\n  }>({\n    toShow: false,\n    variant: 'success',\n    messageText: '',\n  });\n\n  const [inputState, setInputState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n\n  const inputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputState({\n      ...inputState,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const registerFormHandler = async (\n    event: React.FormEvent<HTMLFormElement>\n  ) => {\n    event.preventDefault();\n    const response = await createUserMutationHandler({ ...inputState });\n\n    setMessage({\n      messageText: response.error\n        ? response.data.message\n        : 'registered successfully',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n\n    setInputState({\n      username: '',\n      email: '',\n      password: '',\n    });\n\n    history.push('/login');\n  };\n\n  useEffect(() => {\n    if (isLoggedIn()) history.push('/');\n  }, [isLoggedIn, history]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={registerFormHandler}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"username\"\n                label=\"Username\"\n                type=\"text\"\n                id=\"username\"\n                onChange={inputChangeHandler}\n                autoComplete=\"off\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"off\"\n                onChange={inputChangeHandler}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={inputChangeHandler}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          {registerUserInProgress && <CircularProgress />}\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\">Already have an account? Sign in</Link>\n            </Grid>\n          </Grid>\n        </form>\n        <br />\n      </div>\n      <Message message={message} setMessage={setMessage} />\n    </Container>\n  );\n};\n\nexport default Register;\n","import { createCommentMutation } from '../../graphql/mutations';\nimport { getPostByIdQuery } from '../../graphql/queries';\nimport { useMutation } from '@apollo/client';\nimport { useAuth } from '../../context/AuthProvider';\n\nconst useCreateComment = () => {\n  const { isLoggedIn } = useAuth();\n\n  const [createComment, { data, loading, error }] = useMutation(\n    createCommentMutation\n  );\n\n  const handleCreateComment = async (vars: any, options?: any) => {\n    if (!isLoggedIn()) {\n      return {\n        error: true,\n        data: { message: 'Please Login to create comments' },\n      };\n    }\n\n    try {\n      const { data } = await createComment({\n        variables: {\n          ...vars,\n        },\n        refetchQueries: [\n          { query: getPostByIdQuery, variables: { _id: options.postId } },\n        ],\n      });\n      return { error: false, data: data };\n    } catch (error: any) {\n      return { error: true, data: error };\n    }\n  };\n\n  return {\n    createCommentMutationHandler: handleCreateComment,\n    data,\n    isLoading: loading,\n    error,\n  };\n};\n\nexport default useCreateComment;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  CircularProgress,\n  Grid,\n  TextField,\n  ListItemText,\n  Button,\n  Paper,\n} from '@material-ui/core';\nimport Card from '../../components/Card';\nimport Layout from '../../components/Layout';\nimport Message from '../../components/Message';\nimport { useMessage } from '../../hooks/useMessage';\nimport { getPostByIdQuery } from '../../graphql/queries';\nimport { useQuery } from '@apollo/client';\nimport { useAuth } from '../../context/AuthProvider';\nimport useCreateComment from '../../hooks/mutations/useCreateComment';\n\nconst Post = () => {\n  const { authState } = useAuth();\n  const { id }: { id: string } = useParams();\n\n  const { loading: loadingPostById, data: postById } = useQuery(\n    getPostByIdQuery,\n    { variables: { _id: id } }\n  );\n\n  const { createCommentMutationHandler, isLoading: commentAdditionInProgress } =\n    useCreateComment();\n\n  const [comment, setComment] = useState('');\n  const [message, setMessage] = useMessage({\n    messageText: '',\n    toShow: false,\n    variant: 'success',\n  });\n\n  const postCommentHandler = async () => {\n    const response = await createCommentMutationHandler(\n      {\n        text: comment,\n        creatorId: authState.userId,\n        postId: id,\n      },\n      { postId: id }\n    );\n\n    setMessage({\n      messageText: response.error ? response.data.message : 'comment added',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n  };\n\n  return (\n    <Layout>\n      {loadingPostById ? (\n        <CircularProgress />\n      ) : (\n        <Grid container spacing={2} justifyContent=\"center\">\n          <Grid item xs={11}>\n            <Card\n              cardHeading={postById.getPostById.title}\n              cardBody={postById.getPostById.description}\n            />\n          </Grid>\n          <Grid item xs={11}>\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"Add Comment\"\n              placeholder=\"Add comment\"\n              fullWidth\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setComment(e.target.value)\n              }\n            />\n            <Button\n              onClick={postCommentHandler}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              ADD\n            </Button>\n            {commentAdditionInProgress && <CircularProgress />}\n          </Grid>\n          <Grid item xs={11}>\n            Comments\n          </Grid>\n\n          {postById.getPostById.commentList &&\n            postById.getPostById.commentList.length !== 0 && (\n              <Grid item xs={11}>\n                {postById.getPostById.commentList.map((comment: any) => (\n                  <Paper\n                    key={comment._id}\n                    style={{ padding: '10px', margin: '5px' }}\n                  >\n                    <ListItemText\n                      primary={comment.creator.username}\n                      secondary={comment.text}\n                    />\n                  </Paper>\n                ))}\n              </Grid>\n            )}\n        </Grid>\n      )}\n      <Message message={message} setMessage={setMessage} />\n    </Layout>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Modal as MuiModal } from '@material-ui/core';\n\ninterface ModalType {\n  handleClose: () => void;\n  open: boolean;\n  children: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      position: 'absolute',\n      width: '50%',\n      minWidth: '400px',\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #000',\n      borderRadius: '5px',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\nconst Modal: React.FC<ModalType> = ({ handleClose, open, children }) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <MuiModal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <div className={classes.paper}>{children}</div>\n      </MuiModal>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { createPostMutation } from '../../graphql/mutations';\nimport { listPostsQuery } from '../../graphql/queries';\nimport { useMutation } from '@apollo/client';\nimport { useAuth } from '../../context/AuthProvider';\n\nconst useCreatePost = () => {\n  const { isLoggedIn } = useAuth();\n\n  const [createPost, { data, loading, error }] =\n    useMutation(createPostMutation);\n\n  const handleCreatePost = async (vars: any, options?: any) => {\n    if (!isLoggedIn()) {\n      return { error: true, data: { message: 'Please Login to create posts' } };\n    }\n\n    try {\n      const { data } = await createPost({\n        variables: { ...vars },\n        refetchQueries: [{ query: listPostsQuery }],\n      });\n\n      return { error: false, data: data };\n    } catch (error: any) {\n      return { error: true, data: error };\n    }\n  };\n\n  return {\n    createPostMutationHandler: handleCreatePost,\n    data,\n    isLoading: loading,\n    error,\n  };\n};\n\nexport default useCreatePost;\n","import { deletePostMutation } from '../../graphql/mutations';\nimport { listPostsQuery } from '../../graphql/queries';\nimport { useMutation } from '@apollo/client';\nimport { useAuth } from '../../context/AuthProvider';\n\nconst useDeletePost = () => {\n  const { isLoggedIn } = useAuth();\n\n  const [deletePost, { data, loading, error }] =\n    useMutation(deletePostMutation);\n\n  const handleDeletePost = async (vars: any, options?: any) => {\n    if (!isLoggedIn()) {\n      return { error: true, data: { message: 'Please Login to delete posts' } };\n    }\n\n    try {\n      const { data } = await deletePost({\n        variables: { ...vars },\n        refetchQueries: [{ query: listPostsQuery }],\n      });\n\n      return { error: false, data: data };\n    } catch (error: any) {\n      return { error: true, data: error };\n    }\n  };\n\n  return {\n    deletePostMutationHandler: handleDeletePost,\n    data,\n    isLoading: loading,\n    error,\n  };\n};\n\nexport default useDeletePost;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  CssBaseline,\n  Grid,\n  Typography,\n  Container,\n  CircularProgress,\n  Box,\n  CardActions,\n  Button,\n  TextField,\n} from '@material-ui/core';\n\nimport {\n  FavoriteBorderOutlined,\n  Favorite,\n  InsertComment,\n  Delete,\n} from '@material-ui/icons';\n\nimport Card from '../../components/Card';\nimport Message from '../../components/Message';\nimport Layout from '../../components/Layout';\nimport Modal from '../../components/Modal';\nimport Icon from '../../assets/icon.svg';\nimport { useMessage } from '../../hooks/useMessage';\n\nimport { listPostsQuery } from '../../graphql/queries';\nimport { useAuth } from '../../context/AuthProvider';\nimport { useQuery } from '@apollo/client';\n\nimport { commonStyles } from '../utils';\n\nimport useCreatePost from '../../hooks/mutations/useCreatePost';\nimport useDeletePost from '../../hooks/mutations/useDeletePost';\nimport useCreateLike from '../../hooks/mutations/useCreateLike';\nimport useDeleteLike from '../../hooks/mutations/useDeleteLike';\n\nconst useStyles = commonStyles;\n\nconst Admin: React.FC = () => {\n  const { authState } = useAuth();\n\n  const { loading: loadingPosts, data: postsData } = useQuery(listPostsQuery);\n  const { createPostMutationHandler } = useCreatePost();\n  const { deletePostMutationHandler } = useDeletePost();\n  const { createLikeMutationHandler } = useCreateLike();\n  const { deleteLikeMutationHandler } = useDeleteLike();\n\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [inputState, setInputState] = useState({\n    title: '',\n    description: '',\n    image: '',\n  });\n\n  const [message, setMessage] = useMessage({\n    messageText: '',\n    toShow: false,\n    variant: 'success',\n  });\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const inputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputState({\n      ...inputState,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const createPostHandler = async () => {\n    const response = await createPostMutationHandler({\n      ...inputState,\n      creatorId: authState.userId,\n    });\n\n    setMessage({\n      messageText: response.error ? response.data.message : 'post added',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n\n    setInputState({\n      title: '',\n      description: '',\n      image: '',\n    });\n\n    setIsModalOpen(false);\n  };\n\n  const deletePostHandler = async (postId: string) => {\n    const response = await deletePostMutationHandler({ _id: postId });\n\n    setMessage({\n      messageText: response.error ? response.data.message : 'post deleted',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n  };\n\n  const addLikeHandler = async (postId: string) => {\n    const response = await createLikeMutationHandler(\n      { postId: postId, creatorId: authState.userId },\n      { postId }\n    );\n\n    setMessage({\n      messageText: response.error && response.data.message,\n      toShow: response.error && true,\n      variant: 'error',\n    });\n  };\n\n  const removeLikeHandler = async (likeId: string, postId: string) => {\n    const response = await deleteLikeMutationHandler(\n      { _id: likeId },\n      { postId }\n    );\n\n    setMessage({\n      messageText: response.error && response.data.message,\n      toShow: response.error && true,\n      variant: 'error',\n    });\n  };\n\n  const addCommentHandler = (postId: string) => {\n    history.push(`/admin/post/${postId}`);\n  };\n\n  const ifLoggedInUsersLikeExists = (post: any) => {\n    const like =\n      post.likeList &&\n      post.likeList.find((like: any) => {\n        if (\n          authState.userId &&\n          like.post._id === post._id &&\n          like.creator._id === authState.userId\n        ) {\n          return like;\n        } else {\n          return null;\n        }\n      });\n\n    return like;\n  };\n\n  return (\n    <Layout>\n      <CssBaseline />\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography\n              component=\"h1\"\n              variant=\"h2\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n            >\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <img src={Icon} alt=\"site-icon\" width=\"100px\" />\n                <span>Photos Admin</span>\n              </Box>\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" paragraph>\n              Hello👋! Photos is sample test project that I worked upon to show\n              how custom-directives can be implemented with{' '}\n              <a href=\"https://www.npmjs.com/package/express-graphql\">\n                express-graphql\n              </a>{' '}\n              and{' '}\n              <a href=\"https://www.npmjs.com/package/graphql-directive\">\n                graphql-directive\n              </a>\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justifyContent=\"center\">\n                <Grid item>\n                  <Button\n                    onClick={() => {\n                      setIsModalOpen(true);\n                    }}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    Create Post\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    onClick={() => {\n                      history.push('/admin/users');\n                    }}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    Manage Users\n                  </Button>\n                </Grid>\n              </Grid>\n\n              {/* Modal */}\n              <Modal\n                handleClose={() => {\n                  setIsModalOpen(false);\n                }}\n                open={isModalOpen}\n              >\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required={true}\n                  fullWidth\n                  id=\"post-title\"\n                  label=\"Post Title\"\n                  name=\"title\"\n                  autoFocus\n                  autoComplete=\"off\"\n                  onChange={inputChangeHandler}\n                />\n                <br />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  id=\"image-link\"\n                  label=\"Image Link\"\n                  name=\"image\"\n                  autoComplete=\"off\"\n                  autoFocus\n                  onChange={inputChangeHandler}\n                />\n                <br />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  id=\"post-description\"\n                  label=\"Post Description\"\n                  name=\"description\"\n                  autoFocus\n                  autoComplete=\"off\"\n                  multiline\n                  rows={4}\n                  onChange={inputChangeHandler}\n                />\n                <br />\n                <Button\n                  onClick={createPostHandler}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  ADD\n                </Button>\n              </Modal>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {loadingPosts ? (\n              <CircularProgress />\n            ) : (\n              postsData.listPosts.map((post: any) => {\n                const media = {\n                  image: post.image,\n                  alt: post.image,\n                };\n\n                return (\n                  <Grid item key={post._id} xs={12} sm={6} md={4}>\n                    <Card\n                      media={media}\n                      cardHeading={post.title}\n                      cardBody={post.description}\n                    >\n                      <CardActions>\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          flexDirection=\"column\"\n                        >\n                          {ifLoggedInUsersLikeExists(post) ? (\n                            <Favorite\n                              key={ifLoggedInUsersLikeExists(post)._id}\n                              color=\"secondary\"\n                              onClick={() =>\n                                removeLikeHandler(\n                                  ifLoggedInUsersLikeExists(post)._id,\n                                  post._id\n                                )\n                              }\n                            />\n                          ) : (\n                            <FavoriteBorderOutlined\n                              // key={ifLoggedInUsersLikeExists(post)._id}\n                              color=\"secondary\"\n                              onClick={() => addLikeHandler(post._id)}\n                            />\n                          )}\n                          {post.likeList.length !== 0 && (\n                            <span>{post.likeList.length}</span>\n                          )}\n                        </Box>\n\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          flexDirection=\"column\"\n                        >\n                          <InsertComment\n                            onClick={() => addCommentHandler(post._id)}\n                          />\n                          {post.commentList.length !== 0 && (\n                            <span>{post.commentList.length}</span>\n                          )}\n                        </Box>\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          flexDirection=\"column\"\n                        >\n                          <Delete onClick={() => deletePostHandler(post._id)} />\n                        </Box>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                );\n              })\n            )}\n          </Grid>\n        </Container>\n      </main>\n      <Message message={message} setMessage={setMessage} />\n    </Layout>\n  );\n};\n\nexport default Admin;\n","import { deleteUserMutation } from '../../graphql/mutations';\nimport { listUsersQuery } from '../../graphql/queries';\nimport { useMutation } from '@apollo/client';\nimport { useAuth } from '../../context/AuthProvider';\n\nconst useDeleteUser = () => {\n  const { isLoggedIn } = useAuth();\n\n  const [deleteUser, { data, loading, error }] =\n    useMutation(deleteUserMutation);\n\n  const handleDeleteUser = async (vars: any, options?: any) => {\n    if (!isLoggedIn()) {\n      return { error: true, data: { message: 'Please Login to delete users' } };\n    }\n\n    try {\n      const { data } = await deleteUser({\n        variables: { ...vars },\n        refetchQueries: [{ query: listUsersQuery }],\n      });\n\n      return { error: false, data: data };\n    } catch (error: any) {\n      return { error: true, data: error };\n    }\n  };\n\n  return {\n    deleteUserMutationHandler: handleDeleteUser,\n    data,\n    isLoading: loading,\n    error,\n  };\n};\n\nexport default useDeleteUser;\n","import { assignRoleMutation } from '../../graphql/mutations';\nimport { listUsersQuery } from '../../graphql/queries';\nimport { useMutation } from '@apollo/client';\nimport { useAuth } from '../../context/AuthProvider';\n\nconst useAssignRole = () => {\n  const { isLoggedIn } = useAuth();\n\n  const [assignRole, { data, loading, error }] =\n    useMutation(assignRoleMutation);\n\n  const handleAssignRole = async (vars: any, options?: any) => {\n    if (!isLoggedIn()) {\n      return { error: true, data: { message: 'Please Login to assign roles' } };\n    }\n\n    try {\n      const { data } = await assignRole({\n        variables: {\n          ...vars,\n        },\n        refetchQueries: [{ query: listUsersQuery }],\n      });\n\n      return { error: false, data: data };\n    } catch (error: any) {\n      return { error: true, data: error };\n    }\n  };\n\n  return {\n    assignRoleMutationHandler: handleAssignRole,\n    data,\n    isLoading: loading,\n    error,\n  };\n};\n\nexport default useAssignRole;\n","import React, { useState } from 'react';\nimport {\n  Grid,\n  Box,\n  ListItem,\n  ListItemText,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Select,\n  Button,\n} from '@material-ui/core';\nimport { SupervisedUserCircle, Delete } from '@material-ui/icons';\n\nimport { Role } from '../../../routes/AuthorizedRoute';\nimport Modal from '../../../components/Modal';\nimport Message from '../../../components/Message';\nimport Layout from '../../../components/Layout';\nimport { useAuth } from '../../../context/AuthProvider';\nimport { listUsersQuery } from '../../../graphql/queries';\nimport { useQuery } from '@apollo/client';\nimport useDeleteUser from '../../../hooks/mutations/useDeleteUser';\nimport useAssignRole from '../../../hooks/mutations/useAssignRole';\n\nconst Users: React.FC = () => {\n  const { authState } = useAuth();\n\n  const { data: usersList, loading: loadingUsersList } =\n    useQuery(listUsersQuery);\n\n  const { deleteUserMutationHandler } = useDeleteUser();\n  const { assignRoleMutationHandler } = useAssignRole();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState({\n    role: '',\n    id: '',\n  });\n  const [message, setMessage] = useState<{\n    toShow: boolean;\n    variant: 'success' | 'error' | 'warning';\n    messageText: string | null;\n  }>({\n    toShow: false,\n    variant: 'success',\n    messageText: '',\n  });\n\n  const selectUserHandler = (userId: string) => {\n    setSelectedUser({\n      ...selectedUser,\n      id: userId,\n    });\n  };\n\n  const assignRoleToUserHandler = async () => {\n    const response = await assignRoleMutationHandler({\n      role: selectedUser.role,\n      assignedBy: authState.userId,\n      assignedUser: selectedUser.id,\n    });\n\n    setMessage({\n      messageText: response.error ? response.data.message : 'role assigned',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n\n    setSelectedUser({\n      id: '',\n      role: '',\n    });\n    setIsModalOpen(false);\n  };\n\n  const deleteUserHandler = async (userId: string) => {\n    const response = await deleteUserMutationHandler({ _id: userId });\n    setMessage({\n      messageText: response.error ? response.data.message : 'user deleted',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n  };\n\n  return (\n    <Layout>\n      <Grid container spacing={2} justifyContent=\"center\">\n        {loadingUsersList ? (\n          <CircularProgress />\n        ) : (\n          <Grid item xs={11} md={8}>\n            {usersList.listUsers.map((user: any) => (\n              <Box\n                key={user._id}\n                display=\"flex\"\n                justifyContent=\"space-around\"\n                alignItems=\"center\"\n              >\n                <ListItem alignItems=\"flex-start\">\n                  <ListItemText primary={user.email} secondary={user.role} />\n                </ListItem>\n                <Delete onClick={() => deleteUserHandler(user._id)} />\n                <SupervisedUserCircle\n                  onClick={() => {\n                    selectUserHandler(user._id);\n                    setIsModalOpen(true);\n                  }}\n                />\n                <Modal\n                  open={isModalOpen}\n                  handleClose={() => setIsModalOpen(false)}\n                >\n                  <h4>Select Roles</h4>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">\n                      Roles\n                    </InputLabel>\n                    <Select\n                      native\n                      value={selectedUser.role}\n                      onChange={(e: React.ChangeEvent<any>) => {\n                        setSelectedUser({\n                          ...selectedUser,\n                          role: e.target.value,\n                        });\n                      }}\n                      label=\"Roles\"\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={Role.ADMIN}>{Role.ADMIN}</option>\n                      <option value={Role.MODERATOR}>{Role.MODERATOR}</option>\n                      <option value={Role.AUTH_USER}>{Role.AUTH_USER}</option>\n                    </Select>\n                  </FormControl>\n                  <hr />\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => assignRoleToUserHandler()}\n                  >\n                    Authorize\n                  </Button>\n                </Modal>\n              </Box>\n            ))}\n          </Grid>\n        )}\n\n        <Message message={message} setMessage={setMessage} />\n      </Grid>\n    </Layout>\n  );\n};\n\nexport default Users;\n","import { deleteCommentMutation } from '../../graphql/mutations';\nimport { getPostByIdQuery } from '../../graphql/queries';\nimport { useMutation } from '@apollo/client';\nimport { useAuth } from '../../context/AuthProvider';\n\nconst useDeleteComment = () => {\n  const { isLoggedIn } = useAuth();\n\n  const [deleteComment, { data, loading, error }] = useMutation(\n    deleteCommentMutation\n  );\n\n  const handleDeleteComment = async (vars: any, options?: any) => {\n    if (!isLoggedIn()) {\n      return {\n        error: true,\n        data: { message: 'Please Login to delete comments' },\n      };\n    }\n\n    try {\n      const { data } = await deleteComment({\n        variables: { ...vars },\n        refetchQueries: [\n          { query: getPostByIdQuery, variables: { _id: options.postId } },\n        ],\n      });\n      return { error: false, data: data };\n    } catch (error: any) {\n      return { error: true, data: error };\n    }\n  };\n\n  return {\n    deleteCommentMutationHandler: handleDeleteComment,\n    data,\n    isLoading: loading,\n    error,\n  };\n};\n\nexport default useDeleteComment;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CircularProgress,\n  Grid,\n  Box,\n  TextField,\n  ListItem,\n  ListItemText,\n  Button,\n} from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport Layout from '../../../components/Layout';\nimport Card from '../../../components/Card';\nimport Message from '../../../components/Message';\nimport { useMessage } from '../../../hooks/useMessage';\nimport { useAuth } from '../../../context/AuthProvider';\nimport { getPostByIdQuery } from '../../../graphql/queries';\nimport { useQuery } from '@apollo/client';\nimport useCreateComment from '../../../hooks/mutations/useCreateComment';\nimport useDeleteComment from '../../../hooks/mutations/useDeleteComment';\n\nconst Post: React.FC = () => {\n  const { authState } = useAuth();\n  const { id }: { id: any } = useParams();\n\n  const { createCommentMutationHandler, isLoading: commentAdditionInProgress } =\n    useCreateComment();\n  const { deleteCommentMutationHandler } = useDeleteComment();\n\n  const { loading: loadingPostById, data: postByIdData } = useQuery(\n    getPostByIdQuery,\n    { variables: { _id: id } }\n  );\n\n  const [comment, setComment] = useState('');\n  const [message, setMessage] = useMessage({\n    messageText: '',\n    toShow: false,\n    variant: 'success',\n  });\n\n  const postCommentHandler = async () => {\n    const response = await createCommentMutationHandler(\n      {\n        text: comment,\n        creatorId: authState.userId,\n        postId: id,\n      },\n      { postId: id }\n    );\n\n    setMessage({\n      messageText: response.error ? response.data.message : 'comment added',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n  };\n\n  const deleteCommentHandler = async (commentId: string) => {\n    const response = await deleteCommentMutationHandler(\n      { _id: commentId },\n      { postId: id }\n    );\n\n    setMessage({\n      messageText: response.error ? response.data.message : 'comment deleted',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n  };\n\n  return (\n    <Layout>\n      {loadingPostById ? (\n        <CircularProgress />\n      ) : (\n        <Grid container spacing={2} justifyContent=\"center\">\n          <Grid item xs={11}>\n            <Card\n              cardHeading={postByIdData.getPostById.title}\n              cardBody={postByIdData.getPostById.description}\n            />\n          </Grid>\n          <Grid item xs={11}>\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"Add Comment\"\n              placeholder=\"Add comment\"\n              fullWidth\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setComment(e.target.value)\n              }\n            />\n            <Button\n              onClick={postCommentHandler}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              ADD\n            </Button>\n            {commentAdditionInProgress && <CircularProgress />}\n          </Grid>\n          <Grid item xs={11}>\n            COMMENTS\n            <hr />\n          </Grid>\n\n          {postByIdData.getPostById.commentList &&\n            postByIdData.getPostById.commentList.length !== 0 && (\n              <Grid item xs={11}>\n                {postByIdData.getPostById.commentList.map((comment: any) => (\n                  <Box\n                    key={comment._id}\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                  >\n                    <ListItem\n                      key={comment._id}\n                      alignItems=\"flex-start\"\n                      style={{\n                        backgroundColor: '#b9f6ca',\n                        borderRadius: '5px',\n                        marginBottom: '5px',\n                      }}\n                    >\n                      <ListItemText\n                        primary={comment.creator.username}\n                        secondary={comment.text}\n                      />\n                    </ListItem>\n                    <Delete onClick={() => deleteCommentHandler(comment._id)} />\n                  </Box>\n                ))}\n              </Grid>\n            )}\n        </Grid>\n      )}\n      <Message message={message} setMessage={setMessage} />\n    </Layout>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  CssBaseline,\n  Grid,\n  Typography,\n  Container,\n  CircularProgress,\n  Box,\n  CardActions,\n} from '@material-ui/core';\n\nimport {\n  FavoriteBorderOutlined,\n  Favorite,\n  InsertComment,\n  Delete,\n} from '@material-ui/icons';\n\nimport Card from '../../components/Card';\nimport Message from '../../components/Message';\nimport Layout from '../../components/Layout';\nimport Icon from '../../assets/icon.svg';\nimport { useMessage } from '../../hooks/useMessage';\nimport { commonStyles } from '../utils';\n\nimport { listPostsQuery } from '../../graphql/queries';\nimport { useAuth } from '../../context/AuthProvider';\nimport { useQuery } from '@apollo/client';\n\nimport useDeletePost from '../../hooks/mutations/useDeletePost';\nimport useCreateLike from '../../hooks/mutations/useCreateLike';\nimport useDeleteLike from '../../hooks/mutations/useDeleteLike';\n\nconst useStyles = commonStyles;\n\nconst Moderator: React.FC = () => {\n  const { authState } = useAuth();\n\n  const { loading: loadingPosts, data: postsData } = useQuery(listPostsQuery);\n\n  const { deletePostMutationHandler } = useDeletePost();\n  const { createLikeMutationHandler } = useCreateLike();\n  const { deleteLikeMutationHandler } = useDeleteLike();\n\n  const [message, setMessage] = useMessage({\n    messageText: '',\n    toShow: false,\n    variant: 'success',\n  });\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const deletePostHandler = async (postId: string) => {\n    const response = await deletePostMutationHandler({ _id: postId });\n\n    setMessage({\n      messageText: response.error ? response.data.message : 'post deleted',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n  };\n\n  const addLikeHandler = async (postId: string) => {\n    const response = await createLikeMutationHandler(\n      { postId: postId, creatorId: authState.userId },\n      { postId }\n    );\n\n    setMessage({\n      messageText: response.error && response.data.message,\n      toShow: response.error && true,\n      variant: 'error',\n    });\n  };\n\n  const removeLikeHandler = async (likeId: string, postId: string) => {\n    const response = await deleteLikeMutationHandler(\n      { _id: likeId },\n      { postId }\n    );\n\n    setMessage({\n      messageText: response.error && response.data.message,\n      toShow: response.error && true,\n      variant: 'error',\n    });\n  };\n\n  const addCommentHandler = (postId: string) => {\n    history.push(`/moderator/post/${postId}`);\n  };\n\n  const ifLoggedInUsersLikeExists = (post: any) => {\n    const like =\n      post.likeList &&\n      post.likeList.find((like: any) => {\n        if (\n          authState.userId &&\n          like.post._id === post._id &&\n          like.creator._id === authState.userId\n        ) {\n          return like;\n        } else {\n          return null;\n        }\n      });\n\n    return like;\n  };\n\n  return (\n    <Layout>\n      <CssBaseline />\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography\n              component=\"h1\"\n              variant=\"h2\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n            >\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <img src={Icon} alt=\"site-icon\" width=\"100px\" />\n                <span>Photos Moderator</span>\n              </Box>{' '}\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" paragraph>\n              Hello👋! Photos is sample test project that I worked upon to show\n              how custom-directives can be implemented with{' '}\n              <a href=\"https://www.npmjs.com/package/express-graphql\">\n                express-graphql\n              </a>{' '}\n              and{' '}\n              <a href=\"https://www.npmjs.com/package/graphql-directive\">\n                graphql-directive\n              </a>\n            </Typography>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {loadingPosts ? (\n              <CircularProgress />\n            ) : (\n              postsData.listPosts.map((post: any) => {\n                const media = {\n                  image: post.image,\n                  alt: post.image,\n                };\n\n                return (\n                  <Grid item key={post._id} xs={12} sm={6} md={4}>\n                    <Card\n                      media={media}\n                      cardHeading={post.title}\n                      cardBody={post.description}\n                    >\n                      <CardActions>\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          flexDirection=\"column\"\n                        >\n                          {ifLoggedInUsersLikeExists(post) ? (\n                            <Favorite\n                              key={ifLoggedInUsersLikeExists(post)._id}\n                              color=\"secondary\"\n                              onClick={() =>\n                                removeLikeHandler(\n                                  ifLoggedInUsersLikeExists(post)._id,\n                                  post._id\n                                )\n                              }\n                            />\n                          ) : (\n                            <FavoriteBorderOutlined\n                              color=\"secondary\"\n                              onClick={() => addLikeHandler(post._id)}\n                            />\n                          )}\n                          {post.likeList.length !== 0 && (\n                            <span>{post.likeList.length}</span>\n                          )}\n                        </Box>\n\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          flexDirection=\"column\"\n                        >\n                          <InsertComment\n                            onClick={() => addCommentHandler(post._id)}\n                          />\n                          {post.commentList.length !== 0 && (\n                            <span>{post.commentList.length}</span>\n                          )}\n                        </Box>\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          flexDirection=\"column\"\n                        >\n                          <Delete onClick={() => deletePostHandler(post._id)} />\n                        </Box>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                );\n              })\n            )}\n          </Grid>\n        </Container>\n      </main>\n      <Message message={message} setMessage={setMessage} />\n    </Layout>\n  );\n};\n\nexport default Moderator;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CircularProgress,\n  Grid,\n  Box,\n  TextField,\n  ListItem,\n  ListItemText,\n  Button,\n} from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport Layout from '../../../components/Layout';\nimport Card from '../../../components/Card';\nimport Message from '../../../components/Message';\nimport { useMessage } from '../../../hooks/useMessage';\nimport { useAuth } from '../../../context/AuthProvider';\nimport { getPostByIdQuery } from '../../../graphql/queries';\nimport { useQuery } from '@apollo/client';\n\nimport useCreateComment from '../../../hooks/mutations/useCreateComment';\nimport useDeleteComment from '../../../hooks/mutations/useDeleteComment';\n\nconst Post = () => {\n  const { authState } = useAuth();\n  const { id }: { id: any } = useParams();\n\n  const {\n    loading: loadingPostById,\n    error: errorOnLoadingPostById,\n    data: postByIdData,\n  } = useQuery(getPostByIdQuery, { variables: { _id: id } });\n\n  const { createCommentMutationHandler, isLoading: commentAdditionInProgress } =\n    useCreateComment();\n  const { deleteCommentMutationHandler } = useDeleteComment();\n\n  const [comment, setComment] = useState('');\n  const [message, setMessage] = useMessage({\n    messageText: '',\n    toShow: false,\n    variant: 'success',\n  });\n\n  errorOnLoadingPostById &&\n    setMessage({\n      messageText: errorOnLoadingPostById.message,\n      toShow: true,\n      variant: 'error',\n    });\n\n  const postCommentHandler = async () => {\n    const response = await createCommentMutationHandler(\n      {\n        text: comment,\n        creatorId: authState.userId,\n        postId: id,\n      },\n      { postId: id }\n    );\n\n    setMessage({\n      messageText: response.error ? response.data.message : 'comment added',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n  };\n\n  const deleteCommentHandler = async (commentId: string) => {\n    const response = await deleteCommentMutationHandler(\n      { _id: commentId },\n      { postId: id }\n    );\n\n    setMessage({\n      messageText: response.error ? response.data.message : 'comment deleted',\n      toShow: true,\n      variant: response.error ? 'error' : 'success',\n    });\n  };\n\n  return (\n    <Layout>\n      {loadingPostById ? (\n        <CircularProgress />\n      ) : (\n        <Grid container spacing={2} justifyContent=\"center\">\n          <Grid item xs={11}>\n            <Card\n              cardHeading={postByIdData.getPostById.title}\n              cardBody={postByIdData.getPostById.description}\n            />\n          </Grid>\n          <Grid item xs={11}>\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"Add Comment\"\n              placeholder=\"Add comment\"\n              fullWidth\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setComment(e.target.value)\n              }\n            />\n            <Button\n              onClick={postCommentHandler}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              ADD\n            </Button>\n            {commentAdditionInProgress && <CircularProgress />}\n          </Grid>\n          <Grid item xs={11}>\n            COMMENTS\n            <hr />\n          </Grid>\n\n          {postByIdData.getPostById.commentList &&\n            postByIdData.getPostById.commentList.length !== 0 && (\n              <Grid item xs={11}>\n                {postByIdData.getPostById.commentList.map((comment: any) => (\n                  <Box\n                    key={comment._id}\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                  >\n                    <ListItem\n                      key={comment._id}\n                      alignItems=\"flex-start\"\n                      style={{\n                        backgroundColor: '#b9f6ca',\n                        borderRadius: '5px',\n                        marginBottom: '5px',\n                      }}\n                    >\n                      <ListItemText\n                        primary={comment.creator.username}\n                        secondary={comment.text}\n                      />\n                    </ListItem>\n                    <Delete onClick={() => deleteCommentHandler(comment._id)} />\n                  </Box>\n                ))}\n              </Grid>\n            )}\n        </Grid>\n      )}\n      <Message message={message} setMessage={setMessage} />\n    </Layout>\n  );\n};\n\nexport default Post;\n","import { config } from 'dotenv';\nimport React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport Album from './pages/Album';\nimport Error404 from './pages/404/404';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Post from './pages/Post';\nimport AuthorizedRoute from './routes/AuthorizedRoute';\nimport AuthProvider from './context/AuthProvider';\nimport Admin from './pages/Admin';\nimport Users from './pages/Admin/Users';\nimport PostForAdmin from './pages/Admin/Post';\n\nimport Moderator from './pages/Moderator';\nimport PostForModerator from './pages/Moderator/Post';\nimport client from './lib/apollo-client';\n\nimport { Role } from './routes/AuthorizedRoute';\n\nimport './App.css';\nconfig();\n\nconst App: React.FC = () => {\n  return (\n    <ApolloProvider client={client({})}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <AuthProvider>\n          <Switch>\n            <AuthorizedRoute\n              component={PostForModerator}\n              path=\"/moderator/post/:id\"\n              role={Role.MODERATOR}\n            />\n\n            <AuthorizedRoute\n              component={Moderator}\n              path=\"/moderator\"\n              exact\n              role={Role.MODERATOR}\n            />\n\n            <AuthorizedRoute\n              component={Users}\n              path=\"/admin/users\"\n              role={Role.ADMIN}\n            />\n\n            <AuthorizedRoute\n              component={PostForAdmin}\n              path=\"/admin/post/:id\"\n              role={Role.ADMIN}\n            />\n\n            <AuthorizedRoute\n              path=\"/admin\"\n              exact\n              component={Admin}\n              role={Role.ADMIN}\n            />\n\n            <Route path=\"/post/:id\" component={Post} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/register\" exact component={Register} />\n            <Route path=\"/\" exact component={Album} />\n            <Route component={Error404} />\n          </Switch>\n        </AuthProvider>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n};\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}